{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/index.js","webpack:///external \"chokidar\"","webpack:///external \"fs\"","webpack:///external \"path\""],"names":["chokidar","require","fs","path","watcher","watch","ignored","persistent","ignoreInitial","log","console","bind","on","p","parse","name","toUpperCase","rename","e","extname","writeFile","slice","toLowerCase","toLocaleLowerCase"],"mappings":";;;QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;AClFA,MAAMA,QAAQ,GAAIC,mBAAO,CAAC,0BAAD,CAAzB;;AACA,MAAMC,EAAE,GAAGD,mBAAO,CAAC,cAAD,CAAlB;;AACA,MAAME,IAAI,GAAGF,mBAAO,CAAC,kBAAD,CAApB,C,CAEA;;;AACA,MAAMG,OAAO,GAAGJ,QAAQ,CAACK,KAAT,CAAe,OAAf,EAAwB;AACpCC,SAAO,EAAE,UAD2B;AACf;AACrBC,YAAU,EAAE,IAFwB;AAGpCC,eAAa,EAAG;AAHoB,CAAxB,CAAhB,C,CAOE;;AACA,MAAMC,GAAG,GAAGC,OAAO,CAACD,GAAR,CAAYE,IAAZ,CAAiBD,OAAjB,CAAZ,C,CAEA;;AACAN,OAAO,CACJQ,EADH,CACM,KADN,EACaC,CAAC,IAAI;AAId,MAAGV,IAAI,CAACW,KAAL,CAAWD,CAAX,EAAcE,IAAd,CAAmB,CAAnB,MAA0BZ,IAAI,CAACW,KAAL,CAAWD,CAAX,EAAcE,IAAd,CAAmB,CAAnB,EAAsBC,WAAtB,EAA7B,EAAiE;AAE/DP,OAAG,CAAC,WAAD,CAAH;AACAA,OAAG,CAACI,CAAD,CAAH;AACAX,MAAE,CAACe,MAAH,CAAU,aAAV,EAA0B,UAA1B,EAAuC,UAASC,CAAT,EAAW;AAACT,SAAG,CAACS,CAAD,CAAH;AAAO,KAA1D;AAEF;;AACA,MAAGf,IAAI,CAACgB,OAAL,CAAaN,CAAb,MAAkB,KAArB,EAA2B;AACzBX,MAAE,CAACkB,SAAH,CAAaP,CAAb,EAAkB;;gBAEVV,IAAI,CAACW,KAAL,CAAWD,CAAX,EAAcE,IAAd,CAAmB,CAAnB,EAAsBC,WAAtB,EAAqC,GAAGb,IAAI,CAACW,KAAL,CAAWD,CAAX,EAAcE,IAAd,CAAmBM,KAAnB,CAAyB,CAAzB,EAA4BC,WAA5B,EAA0C;;;;;yBAKzEnB,IAAI,CAACW,KAAL,CAAWD,CAAX,EAAcE,IAAd,CAAmB,CAAnB,EAAsBC,WAAtB,EAAoC,GAAIb,IAAI,CAACW,KAAL,CAAWD,CAAX,EAAcE,IAAd,CAAmBM,KAAnB,CAAyB,CAAzB,EAA4BE,iBAA5B,EAAgD;SAPzG,EAQI,UAASL,CAAT,EAAW;AAACT,SAAG,CAACS,CAAD,CAAH;AAAO,KARvB;AAYD;AAEF,CA3BH,E;;;;;;;;;;;;;;;;;;;;;;;AChBF,qC;;;;;;;;;;;ACAA,+B;;;;;;;;;;;ACAA,iC","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","const chokidar  = require('chokidar'); \nconst fs = require('fs'); \nconst path = require('path'); \n\n// Initialize watcher.\nconst watcher = chokidar.watch('./src', {\n    ignored: /index.js/, // ignore dotfiles\n    persistent: true , \n    ignoreInitial : true ,\n\n  });\n   \n  // Something to use when events are received.\n  const log = console.log.bind(console);\n  \n  // Add event listeners.\n  watcher\n    .on('add', p => {\n\n\n     \n      if(path.parse(p).name[0] !== path.parse(p).name[0].toUpperCase()){\n\n        log(\"not same \"); \n        log(p);\n        fs.rename('src/gggg.js',  'src/g.js' , function(e){log(e)});\n        \n     }\n      if(path.extname(p)===\".js\"){\n        fs.writeFile(p , `import React from 'react' \\n\n        \n     function ${path.parse(p).name[0].toUpperCase() }${ path.parse(p).name.slice(1).toLowerCase()}(){\n      return (<div></div>);\n\n        }\n        \n        export default ${path.parse(p).name[0].toUpperCase()}${  path.parse(p).name.slice(1).toLocaleLowerCase()} ; \n        ` , function(e){log(e)});\n\n     \n\n      }\n\n    })\n     ","module.exports = require(\"chokidar\");","module.exports = require(\"fs\");","module.exports = require(\"path\");"],"sourceRoot":""}